// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: widevine_common_encryption.proto

#include "widevine_common_encryption.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace shaka {

inline constexpr SignedModularDrmResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        response_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SignedModularDrmResponse::SignedModularDrmResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SignedModularDrmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignedModularDrmResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignedModularDrmResponseDefaultTypeInternal() {}
  union {
    SignedModularDrmResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignedModularDrmResponseDefaultTypeInternal _SignedModularDrmResponse_default_instance_;

inline constexpr SignedModularDrmRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SignedModularDrmRequest::SignedModularDrmRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SignedModularDrmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignedModularDrmRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignedModularDrmRequestDefaultTypeInternal() {}
  union {
    SignedModularDrmRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignedModularDrmRequestDefaultTypeInternal _SignedModularDrmRequest_default_instance_;

inline constexpr CommonEncryptionResponse_Track_Pssh::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        boxes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        drm_type_{static_cast< ::shaka::ModularDrmType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CommonEncryptionResponse_Track_Pssh::CommonEncryptionResponse_Track_Pssh(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommonEncryptionResponse_Track_PsshDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonEncryptionResponse_Track_PsshDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonEncryptionResponse_Track_PsshDefaultTypeInternal() {}
  union {
    CommonEncryptionResponse_Track_Pssh _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonEncryptionResponse_Track_PsshDefaultTypeInternal _CommonEncryptionResponse_Track_Pssh_default_instance_;

inline constexpr CommonEncryptionResponse_Drm::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        system_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::shaka::ModularDrmType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CommonEncryptionResponse_Drm::CommonEncryptionResponse_Drm(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommonEncryptionResponse_DrmDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonEncryptionResponse_DrmDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonEncryptionResponse_DrmDefaultTypeInternal() {}
  union {
    CommonEncryptionResponse_Drm _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonEncryptionResponse_DrmDefaultTypeInternal _CommonEncryptionResponse_Drm_default_instance_;

inline constexpr CommonEncryptionRequest_Track::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CommonEncryptionRequest_Track::CommonEncryptionRequest_Track(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommonEncryptionRequest_TrackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonEncryptionRequest_TrackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonEncryptionRequest_TrackDefaultTypeInternal() {}
  union {
    CommonEncryptionRequest_Track _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonEncryptionRequest_TrackDefaultTypeInternal _CommonEncryptionRequest_Track_default_instance_;

inline constexpr CommonEncryptionResponse_Track::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pssh_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        iv_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        crypto_period_index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CommonEncryptionResponse_Track::CommonEncryptionResponse_Track(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommonEncryptionResponse_TrackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonEncryptionResponse_TrackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonEncryptionResponse_TrackDefaultTypeInternal() {}
  union {
    CommonEncryptionResponse_Track _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonEncryptionResponse_TrackDefaultTypeInternal _CommonEncryptionResponse_Track_default_instance_;

inline constexpr CommonEncryptionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tracks_{},
        drm_types_{},
        content_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        policy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pssh_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        group_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        video_feature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        first_crypto_period_index_{0u},
        asset_id_{0u},
        crypto_period_seconds_{0u},
        protection_scheme_{static_cast< ::shaka::CommonEncryptionRequest_ProtectionScheme >(0)},
        enable_entitlement_license_{false},
        crypto_period_count_{1u} {}

template <typename>
PROTOBUF_CONSTEXPR CommonEncryptionRequest::CommonEncryptionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommonEncryptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonEncryptionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonEncryptionRequestDefaultTypeInternal() {}
  union {
    CommonEncryptionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonEncryptionRequestDefaultTypeInternal _CommonEncryptionRequest_default_instance_;

inline constexpr CommonEncryptionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        drm_{},
        tracks_{},
        content_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::shaka::CommonEncryptionResponse_Status >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CommonEncryptionResponse::CommonEncryptionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommonEncryptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonEncryptionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonEncryptionResponseDefaultTypeInternal() {}
  union {
    CommonEncryptionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonEncryptionResponseDefaultTypeInternal _CommonEncryptionResponse_default_instance_;
}  // namespace shaka
static ::_pb::Metadata file_level_metadata_widevine_5fcommon_5fencryption_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_widevine_5fcommon_5fencryption_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_widevine_5fcommon_5fencryption_2eproto = nullptr;
const ::uint32_t TableStruct_widevine_5fcommon_5fencryption_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest_Track, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest_Track, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest_Track, _impl_.type_),
    0,
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.content_id_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.policy_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.tracks_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.drm_types_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.first_crypto_period_index_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.crypto_period_count_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.pssh_data_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.asset_id_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.group_id_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.crypto_period_seconds_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.protection_scheme_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.enable_entitlement_license_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionRequest, _impl_.video_feature_),
    0,
    1,
    ~0u,
    ~0u,
    5,
    10,
    2,
    6,
    3,
    7,
    8,
    9,
    4,
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Drm, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Drm, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Drm, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Drm, _impl_.system_id_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track_Pssh, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track_Pssh, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track_Pssh, _impl_.drm_type_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track_Pssh, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track_Pssh, _impl_.boxes_),
    2,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track, _impl_.key_id_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track, _impl_.iv_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track, _impl_.pssh_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse_Track, _impl_.crypto_period_index_),
    0,
    1,
    2,
    3,
    ~0u,
    4,
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse, _impl_.drm_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse, _impl_.tracks_),
    PROTOBUF_FIELD_OFFSET(::shaka::CommonEncryptionResponse, _impl_.content_id_),
    1,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmRequest, _impl_.request_),
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmRequest, _impl_.signature_),
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmRequest, _impl_.signer_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmResponse, _impl_.response_),
    PROTOBUF_FIELD_OFFSET(::shaka::SignedModularDrmResponse, _impl_.signature_),
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::shaka::CommonEncryptionRequest_Track)},
        {10, 31, -1, sizeof(::shaka::CommonEncryptionRequest)},
        {44, 54, -1, sizeof(::shaka::CommonEncryptionResponse_Drm)},
        {56, 67, -1, sizeof(::shaka::CommonEncryptionResponse_Track_Pssh)},
        {70, 84, -1, sizeof(::shaka::CommonEncryptionResponse_Track)},
        {90, 102, -1, sizeof(::shaka::CommonEncryptionResponse)},
        {106, 117, -1, sizeof(::shaka::SignedModularDrmRequest)},
        {120, 130, -1, sizeof(::shaka::SignedModularDrmResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::shaka::_CommonEncryptionRequest_Track_default_instance_._instance,
    &::shaka::_CommonEncryptionRequest_default_instance_._instance,
    &::shaka::_CommonEncryptionResponse_Drm_default_instance_._instance,
    &::shaka::_CommonEncryptionResponse_Track_Pssh_default_instance_._instance,
    &::shaka::_CommonEncryptionResponse_Track_default_instance_._instance,
    &::shaka::_CommonEncryptionResponse_default_instance_._instance,
    &::shaka::_SignedModularDrmRequest_default_instance_._instance,
    &::shaka::_SignedModularDrmResponse_default_instance_._instance,
};
const char descriptor_table_protodef_widevine_5fcommon_5fencryption_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n widevine_common_encryption.proto\022\005shak"
    "a\"\261\004\n\027CommonEncryptionRequest\022\022\n\ncontent"
    "_id\030\001 \001(\014\022\016\n\006policy\030\002 \001(\t\0224\n\006tracks\030\003 \003("
    "\0132$.shaka.CommonEncryptionRequest.Track\022"
    "(\n\tdrm_types\030\004 \003(\0162\025.shaka.ModularDrmTyp"
    "e\022!\n\031first_crypto_period_index\030\010 \001(\r\022\036\n\023"
    "crypto_period_count\030\t \001(\r:\0011\022\021\n\tpssh_dat"
    "a\030\n \001(\014\022\020\n\010asset_id\030\013 \001(\r\022\020\n\010group_id\030\014 "
    "\001(\014\022\035\n\025crypto_period_seconds\030\r \001(\r\022J\n\021pr"
    "otection_scheme\030\016 \001(\0162/.shaka.CommonEncr"
    "yptionRequest.ProtectionScheme\022\"\n\032enable"
    "_entitlement_license\030\020 \001(\010\022\025\n\rvideo_feat"
    "ure\030\023 \001(\t\032\025\n\005Track\022\014\n\004type\030\001 \001(\t\"[\n\020Prot"
    "ectionScheme\022\017\n\013UNSPECIFIED\020\000\022\014\n\004CENC\020\343\334"
    "\225\233\006\022\014\n\004CBC1\020\261\306\211\233\006\022\014\n\004CENS\020\363\334\225\233\006\022\014\n\004CBCS\020"
    "\363\306\211\233\006\"\270\007\n\030CommonEncryptionResponse\0226\n\006st"
    "atus\030\001 \001(\0162&.shaka.CommonEncryptionRespo"
    "nse.Status\0220\n\003drm\030\003 \003(\0132#.shaka.CommonEn"
    "cryptionResponse.Drm\0225\n\006tracks\030\004 \003(\0132%.s"
    "haka.CommonEncryptionResponse.Track\022\022\n\nc"
    "ontent_id\030\006 \001(\014\032=\n\003Drm\022#\n\004type\030\001 \001(\0162\025.s"
    "haka.ModularDrmType\022\021\n\tsystem_id\030\002 \001(\t\032\343"
    "\001\n\005Track\022\014\n\004type\030\001 \001(\t\022\016\n\006key_id\030\002 \001(\014\022\013"
    "\n\003key\030\003 \001(\014\022\n\n\002iv\030\004 \001(\014\0228\n\004pssh\030\005 \003(\0132*."
    "shaka.CommonEncryptionResponse.Track.Pss"
    "h\022\033\n\023crypto_period_index\030\006 \001(\r\032L\n\004Pssh\022\'"
    "\n\010drm_type\030\001 \001(\0162\025.shaka.ModularDrmType\022"
    "\014\n\004data\030\002 \001(\014\022\r\n\005boxes\030\003 \001(\014\"\301\003\n\006Status\022"
    "\006\n\002OK\020\000\022\024\n\020SIGNATURE_FAILED\020\001\022\026\n\022CONTENT"
    "_ID_MISSING\020\002\022\022\n\016POLICY_UNKNOWN\020\003\022\026\n\022TRA"
    "CK_TYPE_MISSING\020\004\022\026\n\022TRACK_TYPE_UNKNOWN\020"
    "\005\022\025\n\021MALFORMED_REQUEST\020\006\022\021\n\rACCESS_DENIE"
    "D\020\007\022\022\n\016INTERNAL_ERROR\020\010\022\031\n\025INVALID_WIDEV"
    "INE_PSSH\020\t\022\037\n\033TOO_MANY_CONTENT_SPECIFIER"
    "S\020\n\022\023\n\017ASSET_NOT_FOUND\020\013\022\025\n\021ASSET_MISSIN"
    "G_KEY\020\014\022\027\n\023CONTENT_ID_MISMATCH\020\r\022\023\n\017KEY_"
    "ID_MISMATCH\020\016\022\034\n\030INVALID_GROUP_TRACK_TYP"
    "E\020\017\022*\n&KEY_ROTATION_WITH_UNSUPPORTED_DRM"
    "_TYPE\020\020\022\037\n\033NO_REQUESTED_CRYPTO_PERIODS\020\021"
    "\"M\n\027SignedModularDrmRequest\022\017\n\007request\030\001"
    " \001(\014\022\021\n\tsignature\030\002 \001(\014\022\016\n\006signer\030\003 \001(\t\""
    "\?\n\030SignedModularDrmResponse\022\020\n\010response\030"
    "\001 \001(\014\022\021\n\tsignature\030\002 \001(\014*\036\n\016ModularDrmTy"
    "pe\022\014\n\010WIDEVINE\020\000"
};
static ::absl::once_flag descriptor_table_widevine_5fcommon_5fencryption_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_widevine_5fcommon_5fencryption_2eproto = {
    false,
    false,
    1736,
    descriptor_table_protodef_widevine_5fcommon_5fencryption_2eproto,
    "widevine_common_encryption.proto",
    &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_widevine_5fcommon_5fencryption_2eproto::offsets,
    file_level_metadata_widevine_5fcommon_5fencryption_2eproto,
    file_level_enum_descriptors_widevine_5fcommon_5fencryption_2eproto,
    file_level_service_descriptors_widevine_5fcommon_5fencryption_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter() {
  return &descriptor_table_widevine_5fcommon_5fencryption_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_widevine_5fcommon_5fencryption_2eproto(&descriptor_table_widevine_5fcommon_5fencryption_2eproto);
namespace shaka {
const ::google::protobuf::EnumDescriptor* CommonEncryptionRequest_ProtectionScheme_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_widevine_5fcommon_5fencryption_2eproto);
  return file_level_enum_descriptors_widevine_5fcommon_5fencryption_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CommonEncryptionRequest_ProtectionScheme_internal_data_[] = {
    65536u, 262144u, 1667591779u, 1667392371u, 1667591795u, 1667392305u, };
bool CommonEncryptionRequest_ProtectionScheme_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, CommonEncryptionRequest_ProtectionScheme_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CommonEncryptionRequest_ProtectionScheme CommonEncryptionRequest::UNSPECIFIED;
constexpr CommonEncryptionRequest_ProtectionScheme CommonEncryptionRequest::CENC;
constexpr CommonEncryptionRequest_ProtectionScheme CommonEncryptionRequest::CBC1;
constexpr CommonEncryptionRequest_ProtectionScheme CommonEncryptionRequest::CENS;
constexpr CommonEncryptionRequest_ProtectionScheme CommonEncryptionRequest::CBCS;
constexpr CommonEncryptionRequest_ProtectionScheme CommonEncryptionRequest::ProtectionScheme_MIN;
constexpr CommonEncryptionRequest_ProtectionScheme CommonEncryptionRequest::ProtectionScheme_MAX;
constexpr int CommonEncryptionRequest::ProtectionScheme_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CommonEncryptionResponse_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_widevine_5fcommon_5fencryption_2eproto);
  return file_level_enum_descriptors_widevine_5fcommon_5fencryption_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t CommonEncryptionResponse_Status_internal_data_[] = {
    1179648u, 0u, };
bool CommonEncryptionResponse_Status_IsValid(int value) {
  return 0 <= value && value <= 17;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::OK;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::SIGNATURE_FAILED;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::CONTENT_ID_MISSING;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::POLICY_UNKNOWN;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::TRACK_TYPE_MISSING;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::TRACK_TYPE_UNKNOWN;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::MALFORMED_REQUEST;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::ACCESS_DENIED;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::INTERNAL_ERROR;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::INVALID_WIDEVINE_PSSH;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::TOO_MANY_CONTENT_SPECIFIERS;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::ASSET_NOT_FOUND;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::ASSET_MISSING_KEY;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::CONTENT_ID_MISMATCH;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::KEY_ID_MISMATCH;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::INVALID_GROUP_TRACK_TYPE;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::KEY_ROTATION_WITH_UNSUPPORTED_DRM_TYPE;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::NO_REQUESTED_CRYPTO_PERIODS;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::Status_MIN;
constexpr CommonEncryptionResponse_Status CommonEncryptionResponse::Status_MAX;
constexpr int CommonEncryptionResponse::Status_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ModularDrmType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_widevine_5fcommon_5fencryption_2eproto);
  return file_level_enum_descriptors_widevine_5fcommon_5fencryption_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ModularDrmType_internal_data_[] = {
    65536u, 0u, };
bool ModularDrmType_IsValid(int value) {
  return 0 <= value && value <= 0;
}
// ===================================================================

class CommonEncryptionRequest_Track::_Internal {
 public:
  using HasBits = decltype(std::declval<CommonEncryptionRequest_Track>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest_Track, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CommonEncryptionRequest_Track::CommonEncryptionRequest_Track(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shaka.CommonEncryptionRequest.Track)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionRequest_Track::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_(arena, from.type_) {}

CommonEncryptionRequest_Track::CommonEncryptionRequest_Track(
    ::google::protobuf::Arena* arena,
    const CommonEncryptionRequest_Track& from)
    : ::google::protobuf::Message(arena) {
  CommonEncryptionRequest_Track* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:shaka.CommonEncryptionRequest.Track)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionRequest_Track::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_(arena) {}

inline void CommonEncryptionRequest_Track::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommonEncryptionRequest_Track::~CommonEncryptionRequest_Track() {
  // @@protoc_insertion_point(destructor:shaka.CommonEncryptionRequest.Track)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommonEncryptionRequest_Track::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommonEncryptionRequest_Track::Clear() {
// @@protoc_insertion_point(message_clear_start:shaka.CommonEncryptionRequest.Track)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.type_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommonEncryptionRequest_Track::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 48, 2> CommonEncryptionRequest_Track::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest_Track, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CommonEncryptionRequest_Track_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string type = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest_Track, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string type = 1;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest_Track, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\4\0\0\0\0\0\0"
    "shaka.CommonEncryptionRequest.Track"
    "type"
  }},
};

::uint8_t* CommonEncryptionRequest_Track::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shaka.CommonEncryptionRequest.Track)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "shaka.CommonEncryptionRequest.Track.type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shaka.CommonEncryptionRequest.Track)
  return target;
}

::size_t CommonEncryptionRequest_Track::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shaka.CommonEncryptionRequest.Track)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommonEncryptionRequest_Track::_class_data_ = {
    CommonEncryptionRequest_Track::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommonEncryptionRequest_Track::GetClassData() const {
  return &_class_data_;
}

void CommonEncryptionRequest_Track::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommonEncryptionRequest_Track*>(&to_msg);
  auto& from = static_cast<const CommonEncryptionRequest_Track&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shaka.CommonEncryptionRequest.Track)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommonEncryptionRequest_Track::CopyFrom(const CommonEncryptionRequest_Track& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shaka.CommonEncryptionRequest.Track)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommonEncryptionRequest_Track::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommonEncryptionRequest_Track::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommonEncryptionRequest_Track::InternalSwap(CommonEncryptionRequest_Track* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
}

::google::protobuf::Metadata CommonEncryptionRequest_Track::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter, &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
      file_level_metadata_widevine_5fcommon_5fencryption_2eproto[0]);
}
// ===================================================================

class CommonEncryptionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CommonEncryptionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_._has_bits_);
  static void set_has_content_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_first_crypto_period_index(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_crypto_period_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_pssh_data(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_asset_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_group_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_crypto_period_seconds(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_protection_scheme(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_enable_entitlement_license(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_video_feature(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CommonEncryptionRequest::CommonEncryptionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shaka.CommonEncryptionRequest)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tracks_{visibility, arena, from.tracks_},
        drm_types_{visibility, arena, from.drm_types_},
        content_id_(arena, from.content_id_),
        policy_(arena, from.policy_),
        pssh_data_(arena, from.pssh_data_),
        group_id_(arena, from.group_id_),
        video_feature_(arena, from.video_feature_) {}

CommonEncryptionRequest::CommonEncryptionRequest(
    ::google::protobuf::Arena* arena,
    const CommonEncryptionRequest& from)
    : ::google::protobuf::Message(arena) {
  CommonEncryptionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, first_crypto_period_index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, first_crypto_period_index_),
           offsetof(Impl_, crypto_period_count_) -
               offsetof(Impl_, first_crypto_period_index_) +
               sizeof(Impl_::crypto_period_count_));

  // @@protoc_insertion_point(copy_constructor:shaka.CommonEncryptionRequest)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tracks_{visibility, arena},
        drm_types_{visibility, arena},
        content_id_(arena),
        policy_(arena),
        pssh_data_(arena),
        group_id_(arena),
        video_feature_(arena),
        crypto_period_count_{1u} {}

inline void CommonEncryptionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, first_crypto_period_index_),
           0,
           offsetof(Impl_, enable_entitlement_license_) -
               offsetof(Impl_, first_crypto_period_index_) +
               sizeof(Impl_::enable_entitlement_license_));
}
CommonEncryptionRequest::~CommonEncryptionRequest() {
  // @@protoc_insertion_point(destructor:shaka.CommonEncryptionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommonEncryptionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.content_id_.Destroy();
  _impl_.policy_.Destroy();
  _impl_.pssh_data_.Destroy();
  _impl_.group_id_.Destroy();
  _impl_.video_feature_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommonEncryptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shaka.CommonEncryptionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tracks_.Clear();
  _impl_.drm_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.content_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.policy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.pssh_data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.group_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.video_feature_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.first_crypto_period_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.crypto_period_seconds_) -
        reinterpret_cast<char*>(&_impl_.first_crypto_period_index_)) + sizeof(_impl_.crypto_period_seconds_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.protection_scheme_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.enable_entitlement_license_) -
        reinterpret_cast<char*>(&_impl_.protection_scheme_)) + sizeof(_impl_.enable_entitlement_license_));
    _impl_.crypto_period_count_ = 1u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommonEncryptionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 3, 65, 2> CommonEncryptionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_._has_bits_),
    0, // no _extensions_
    19, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294656112,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommonEncryptionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool enable_entitlement_license = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 9, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.enable_entitlement_license_)}},
    // optional bytes content_id = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.content_id_)}},
    // optional string policy = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.policy_)}},
    // repeated .shaka.CommonEncryptionRequest.Track tracks = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.tracks_)}},
    // repeated .shaka.ModularDrmType drm_types = 4;
    {::_pbi::TcParser::FastEr0R1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.drm_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 first_crypto_period_index = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommonEncryptionRequest, _impl_.first_crypto_period_index_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.first_crypto_period_index_)}},
    // optional uint32 crypto_period_count = 9 [default = 1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommonEncryptionRequest, _impl_.crypto_period_count_), 10>(),
     {72, 10, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.crypto_period_count_)}},
    // optional bytes pssh_data = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 2, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.pssh_data_)}},
    // optional uint32 asset_id = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommonEncryptionRequest, _impl_.asset_id_), 6>(),
     {88, 6, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.asset_id_)}},
    // optional bytes group_id = 12;
    {::_pbi::TcParser::FastBS1,
     {98, 3, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.group_id_)}},
    // optional uint32 crypto_period_seconds = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommonEncryptionRequest, _impl_.crypto_period_seconds_), 7>(),
     {104, 7, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.crypto_period_seconds_)}},
    // optional .shaka.CommonEncryptionRequest.ProtectionScheme protection_scheme = 14;
    {::_pbi::TcParser::FastEvS1,
     {112, 8, 2, PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.protection_scheme_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes content_id = 1;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.content_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string policy = 2;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.policy_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .shaka.CommonEncryptionRequest.Track tracks = 3;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.tracks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .shaka.ModularDrmType drm_types = 4;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.drm_types_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // optional uint32 first_crypto_period_index = 8;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.first_crypto_period_index_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 crypto_period_count = 9 [default = 1];
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.crypto_period_count_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes pssh_data = 10;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.pssh_data_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 asset_id = 11;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.asset_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes group_id = 12;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.group_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 crypto_period_seconds = 13;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.crypto_period_seconds_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .shaka.CommonEncryptionRequest.ProtectionScheme protection_scheme = 14;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.protection_scheme_), _Internal::kHasBitsOffset + 8, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional bool enable_entitlement_license = 16;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.enable_entitlement_license_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string video_feature = 19;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.video_feature_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::shaka::CommonEncryptionRequest_Track>()},
    {0, 1},
    {::_pbi::FieldAuxEnumData{}, ::shaka::CommonEncryptionRequest_ProtectionScheme_internal_data_},
  }}, {{
    "\35\0\6\0\0\0\0\0\0\0\0\0\0\15\0\0"
    "shaka.CommonEncryptionRequest"
    "policy"
    "video_feature"
  }},
};

::uint8_t* CommonEncryptionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shaka.CommonEncryptionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes content_id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_content_id();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional string policy = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_policy();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "shaka.CommonEncryptionRequest.policy");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .shaka.CommonEncryptionRequest.Track tracks = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tracks_size()); i < n; i++) {
    const auto& repfield = this->_internal_tracks().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .shaka.ModularDrmType drm_types = 4;
  for (int i = 0, n = this->_internal_drm_types_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, static_cast<::shaka::ModularDrmType>(this->_internal_drm_types().Get(i)),
        target);
  }

  // optional uint32 first_crypto_period_index = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_first_crypto_period_index(), target);
  }

  // optional uint32 crypto_period_count = 9 [default = 1];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_crypto_period_count(), target);
  }

  // optional bytes pssh_data = 10;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_pssh_data();
    target = stream->WriteBytesMaybeAliased(10, _s, target);
  }

  // optional uint32 asset_id = 11;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_asset_id(), target);
  }

  // optional bytes group_id = 12;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_group_id();
    target = stream->WriteBytesMaybeAliased(12, _s, target);
  }

  // optional uint32 crypto_period_seconds = 13;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_crypto_period_seconds(), target);
  }

  // optional .shaka.CommonEncryptionRequest.ProtectionScheme protection_scheme = 14;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        14, this->_internal_protection_scheme(), target);
  }

  // optional bool enable_entitlement_license = 16;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_enable_entitlement_license(), target);
  }

  // optional string video_feature = 19;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_video_feature();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "shaka.CommonEncryptionRequest.video_feature");
    target = stream->WriteStringMaybeAliased(19, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shaka.CommonEncryptionRequest)
  return target;
}

::size_t CommonEncryptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shaka.CommonEncryptionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .shaka.CommonEncryptionRequest.Track tracks = 3;
  total_size += 1UL * this->_internal_tracks_size();
  for (const auto& msg : this->_internal_tracks()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .shaka.ModularDrmType drm_types = 4;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_drm_types_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_drm_types().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes content_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_content_id());
    }

    // optional string policy = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_policy());
    }

    // optional bytes pssh_data = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_pssh_data());
    }

    // optional bytes group_id = 12;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_group_id());
    }

    // optional string video_feature = 19;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_video_feature());
    }

    // optional uint32 first_crypto_period_index = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_first_crypto_period_index());
    }

    // optional uint32 asset_id = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_asset_id());
    }

    // optional uint32 crypto_period_seconds = 13;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_crypto_period_seconds());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional .shaka.CommonEncryptionRequest.ProtectionScheme protection_scheme = 14;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_protection_scheme());
    }

    // optional bool enable_entitlement_license = 16;
    if (cached_has_bits & 0x00000200u) {
      total_size += 3;
    }

    // optional uint32 crypto_period_count = 9 [default = 1];
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_crypto_period_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommonEncryptionRequest::_class_data_ = {
    CommonEncryptionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommonEncryptionRequest::GetClassData() const {
  return &_class_data_;
}

void CommonEncryptionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommonEncryptionRequest*>(&to_msg);
  auto& from = static_cast<const CommonEncryptionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shaka.CommonEncryptionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tracks()->MergeFrom(
      from._internal_tracks());
  _this->_internal_mutable_drm_types()->MergeFrom(from._internal_drm_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_content_id(from._internal_content_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_policy(from._internal_policy());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_pssh_data(from._internal_pssh_data());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_group_id(from._internal_group_id());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_video_feature(from._internal_video_feature());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.first_crypto_period_index_ = from._impl_.first_crypto_period_index_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.asset_id_ = from._impl_.asset_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.crypto_period_seconds_ = from._impl_.crypto_period_seconds_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.protection_scheme_ = from._impl_.protection_scheme_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.enable_entitlement_license_ = from._impl_.enable_entitlement_license_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.crypto_period_count_ = from._impl_.crypto_period_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommonEncryptionRequest::CopyFrom(const CommonEncryptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shaka.CommonEncryptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommonEncryptionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommonEncryptionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommonEncryptionRequest::InternalSwap(CommonEncryptionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tracks_.InternalSwap(&other->_impl_.tracks_);
  _impl_.drm_types_.InternalSwap(&other->_impl_.drm_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_id_, &other->_impl_.content_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.policy_, &other->_impl_.policy_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pssh_data_, &other->_impl_.pssh_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_id_, &other->_impl_.group_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.video_feature_, &other->_impl_.video_feature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.crypto_period_count_)
      + sizeof(CommonEncryptionRequest::_impl_.crypto_period_count_)
      - PROTOBUF_FIELD_OFFSET(CommonEncryptionRequest, _impl_.first_crypto_period_index_)>(
          reinterpret_cast<char*>(&_impl_.first_crypto_period_index_),
          reinterpret_cast<char*>(&other->_impl_.first_crypto_period_index_));
}

::google::protobuf::Metadata CommonEncryptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter, &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
      file_level_metadata_widevine_5fcommon_5fencryption_2eproto[1]);
}
// ===================================================================

class CommonEncryptionResponse_Drm::_Internal {
 public:
  using HasBits = decltype(std::declval<CommonEncryptionResponse_Drm>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Drm, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_system_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CommonEncryptionResponse_Drm::CommonEncryptionResponse_Drm(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shaka.CommonEncryptionResponse.Drm)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionResponse_Drm::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        system_id_(arena, from.system_id_) {}

CommonEncryptionResponse_Drm::CommonEncryptionResponse_Drm(
    ::google::protobuf::Arena* arena,
    const CommonEncryptionResponse_Drm& from)
    : ::google::protobuf::Message(arena) {
  CommonEncryptionResponse_Drm* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:shaka.CommonEncryptionResponse.Drm)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionResponse_Drm::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        system_id_(arena) {}

inline void CommonEncryptionResponse_Drm::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
CommonEncryptionResponse_Drm::~CommonEncryptionResponse_Drm() {
  // @@protoc_insertion_point(destructor:shaka.CommonEncryptionResponse.Drm)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommonEncryptionResponse_Drm::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.system_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommonEncryptionResponse_Drm::Clear() {
// @@protoc_insertion_point(message_clear_start:shaka.CommonEncryptionResponse.Drm)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.system_id_.ClearNonDefaultToEmpty();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommonEncryptionResponse_Drm::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 52, 2> CommonEncryptionResponse_Drm::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Drm, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommonEncryptionResponse_Drm_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string system_id = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Drm, _impl_.system_id_)}},
    // optional .shaka.ModularDrmType type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Drm, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .shaka.ModularDrmType type = 1;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Drm, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string system_id = 2;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Drm, _impl_.system_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 1},
  }}, {{
    "\42\0\11\0\0\0\0\0"
    "shaka.CommonEncryptionResponse.Drm"
    "system_id"
  }},
};

::uint8_t* CommonEncryptionResponse_Drm::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shaka.CommonEncryptionResponse.Drm)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .shaka.ModularDrmType type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // optional string system_id = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_system_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "shaka.CommonEncryptionResponse.Drm.system_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shaka.CommonEncryptionResponse.Drm)
  return target;
}

::size_t CommonEncryptionResponse_Drm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shaka.CommonEncryptionResponse.Drm)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string system_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_system_id());
    }

    // optional .shaka.ModularDrmType type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommonEncryptionResponse_Drm::_class_data_ = {
    CommonEncryptionResponse_Drm::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommonEncryptionResponse_Drm::GetClassData() const {
  return &_class_data_;
}

void CommonEncryptionResponse_Drm::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommonEncryptionResponse_Drm*>(&to_msg);
  auto& from = static_cast<const CommonEncryptionResponse_Drm&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shaka.CommonEncryptionResponse.Drm)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_system_id(from._internal_system_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommonEncryptionResponse_Drm::CopyFrom(const CommonEncryptionResponse_Drm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shaka.CommonEncryptionResponse.Drm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommonEncryptionResponse_Drm::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommonEncryptionResponse_Drm::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommonEncryptionResponse_Drm::InternalSwap(CommonEncryptionResponse_Drm* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.system_id_, &other->_impl_.system_id_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata CommonEncryptionResponse_Drm::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter, &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
      file_level_metadata_widevine_5fcommon_5fencryption_2eproto[2]);
}
// ===================================================================

class CommonEncryptionResponse_Track_Pssh::_Internal {
 public:
  using HasBits = decltype(std::declval<CommonEncryptionResponse_Track_Pssh>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track_Pssh, _impl_._has_bits_);
  static void set_has_drm_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_boxes(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CommonEncryptionResponse_Track_Pssh::CommonEncryptionResponse_Track_Pssh(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shaka.CommonEncryptionResponse.Track.Pssh)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionResponse_Track_Pssh::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_),
        boxes_(arena, from.boxes_) {}

CommonEncryptionResponse_Track_Pssh::CommonEncryptionResponse_Track_Pssh(
    ::google::protobuf::Arena* arena,
    const CommonEncryptionResponse_Track_Pssh& from)
    : ::google::protobuf::Message(arena) {
  CommonEncryptionResponse_Track_Pssh* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.drm_type_ = from._impl_.drm_type_;

  // @@protoc_insertion_point(copy_constructor:shaka.CommonEncryptionResponse.Track.Pssh)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionResponse_Track_Pssh::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_(arena),
        boxes_(arena) {}

inline void CommonEncryptionResponse_Track_Pssh::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.drm_type_ = {};
}
CommonEncryptionResponse_Track_Pssh::~CommonEncryptionResponse_Track_Pssh() {
  // @@protoc_insertion_point(destructor:shaka.CommonEncryptionResponse.Track.Pssh)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommonEncryptionResponse_Track_Pssh::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.boxes_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommonEncryptionResponse_Track_Pssh::Clear() {
// @@protoc_insertion_point(message_clear_start:shaka.CommonEncryptionResponse.Track.Pssh)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.boxes_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.drm_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommonEncryptionResponse_Track_Pssh::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> CommonEncryptionResponse_Track_Pssh::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track_Pssh, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommonEncryptionResponse_Track_Pssh_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .shaka.ModularDrmType drm_type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track_Pssh, _impl_.drm_type_)}},
    // optional bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track_Pssh, _impl_.data_)}},
    // optional bytes boxes = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track_Pssh, _impl_.boxes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .shaka.ModularDrmType drm_type = 1;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track_Pssh, _impl_.drm_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track_Pssh, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes boxes = 3;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track_Pssh, _impl_.boxes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {0, 1},
  }}, {{
  }},
};

::uint8_t* CommonEncryptionResponse_Track_Pssh::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shaka.CommonEncryptionResponse.Track.Pssh)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .shaka.ModularDrmType drm_type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_drm_type(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional bytes boxes = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_boxes();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shaka.CommonEncryptionResponse.Track.Pssh)
  return target;
}

::size_t CommonEncryptionResponse_Track_Pssh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shaka.CommonEncryptionResponse.Track.Pssh)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

    // optional bytes boxes = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_boxes());
    }

    // optional .shaka.ModularDrmType drm_type = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_drm_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommonEncryptionResponse_Track_Pssh::_class_data_ = {
    CommonEncryptionResponse_Track_Pssh::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommonEncryptionResponse_Track_Pssh::GetClassData() const {
  return &_class_data_;
}

void CommonEncryptionResponse_Track_Pssh::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommonEncryptionResponse_Track_Pssh*>(&to_msg);
  auto& from = static_cast<const CommonEncryptionResponse_Track_Pssh&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shaka.CommonEncryptionResponse.Track.Pssh)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_boxes(from._internal_boxes());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.drm_type_ = from._impl_.drm_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommonEncryptionResponse_Track_Pssh::CopyFrom(const CommonEncryptionResponse_Track_Pssh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shaka.CommonEncryptionResponse.Track.Pssh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommonEncryptionResponse_Track_Pssh::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommonEncryptionResponse_Track_Pssh::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommonEncryptionResponse_Track_Pssh::InternalSwap(CommonEncryptionResponse_Track_Pssh* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.boxes_, &other->_impl_.boxes_, arena);
  swap(_impl_.drm_type_, other->_impl_.drm_type_);
}

::google::protobuf::Metadata CommonEncryptionResponse_Track_Pssh::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter, &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
      file_level_metadata_widevine_5fcommon_5fencryption_2eproto[3]);
}
// ===================================================================

class CommonEncryptionResponse_Track::_Internal {
 public:
  using HasBits = decltype(std::declval<CommonEncryptionResponse_Track>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_key_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_iv(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_crypto_period_index(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CommonEncryptionResponse_Track::CommonEncryptionResponse_Track(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shaka.CommonEncryptionResponse.Track)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionResponse_Track::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pssh_{visibility, arena, from.pssh_},
        type_(arena, from.type_),
        key_id_(arena, from.key_id_),
        key_(arena, from.key_),
        iv_(arena, from.iv_) {}

CommonEncryptionResponse_Track::CommonEncryptionResponse_Track(
    ::google::protobuf::Arena* arena,
    const CommonEncryptionResponse_Track& from)
    : ::google::protobuf::Message(arena) {
  CommonEncryptionResponse_Track* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.crypto_period_index_ = from._impl_.crypto_period_index_;

  // @@protoc_insertion_point(copy_constructor:shaka.CommonEncryptionResponse.Track)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionResponse_Track::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        pssh_{visibility, arena},
        type_(arena),
        key_id_(arena),
        key_(arena),
        iv_(arena) {}

inline void CommonEncryptionResponse_Track::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.crypto_period_index_ = {};
}
CommonEncryptionResponse_Track::~CommonEncryptionResponse_Track() {
  // @@protoc_insertion_point(destructor:shaka.CommonEncryptionResponse.Track)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommonEncryptionResponse_Track::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_.Destroy();
  _impl_.key_id_.Destroy();
  _impl_.key_.Destroy();
  _impl_.iv_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommonEncryptionResponse_Track::Clear() {
// @@protoc_insertion_point(message_clear_start:shaka.CommonEncryptionResponse.Track)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pssh_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.key_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.iv_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.crypto_period_index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommonEncryptionResponse_Track::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 49, 2> CommonEncryptionResponse_Track::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommonEncryptionResponse_Track_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string type = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.type_)}},
    // optional bytes key_id = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.key_id_)}},
    // optional bytes key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.key_)}},
    // optional bytes iv = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.iv_)}},
    // repeated .shaka.CommonEncryptionResponse.Track.Pssh pssh = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.pssh_)}},
    // optional uint32 crypto_period_index = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommonEncryptionResponse_Track, _impl_.crypto_period_index_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.crypto_period_index_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string type = 1;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes key_id = 2;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.key_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes key = 3;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.key_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes iv = 4;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.iv_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .shaka.CommonEncryptionResponse.Track.Pssh pssh = 5;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.pssh_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 crypto_period_index = 6;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse_Track, _impl_.crypto_period_index_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::shaka::CommonEncryptionResponse_Track_Pssh>()},
  }}, {{
    "\44\4\0\0\0\0\0\0"
    "shaka.CommonEncryptionResponse.Track"
    "type"
  }},
};

::uint8_t* CommonEncryptionResponse_Track::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shaka.CommonEncryptionResponse.Track)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "shaka.CommonEncryptionResponse.Track.type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bytes key_id = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_key_id();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional bytes key = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // optional bytes iv = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_iv();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // repeated .shaka.CommonEncryptionResponse.Track.Pssh pssh = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_pssh_size()); i < n; i++) {
    const auto& repfield = this->_internal_pssh().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 crypto_period_index = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_crypto_period_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shaka.CommonEncryptionResponse.Track)
  return target;
}

::size_t CommonEncryptionResponse_Track::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shaka.CommonEncryptionResponse.Track)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .shaka.CommonEncryptionResponse.Track.Pssh pssh = 5;
  total_size += 1UL * this->_internal_pssh_size();
  for (const auto& msg : this->_internal_pssh()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_type());
    }

    // optional bytes key_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_key_id());
    }

    // optional bytes key = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_key());
    }

    // optional bytes iv = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_iv());
    }

    // optional uint32 crypto_period_index = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_crypto_period_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommonEncryptionResponse_Track::_class_data_ = {
    CommonEncryptionResponse_Track::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommonEncryptionResponse_Track::GetClassData() const {
  return &_class_data_;
}

void CommonEncryptionResponse_Track::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommonEncryptionResponse_Track*>(&to_msg);
  auto& from = static_cast<const CommonEncryptionResponse_Track&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shaka.CommonEncryptionResponse.Track)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pssh()->MergeFrom(
      from._internal_pssh());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type(from._internal_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_key_id(from._internal_key_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_iv(from._internal_iv());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.crypto_period_index_ = from._impl_.crypto_period_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommonEncryptionResponse_Track::CopyFrom(const CommonEncryptionResponse_Track& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shaka.CommonEncryptionResponse.Track)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommonEncryptionResponse_Track::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommonEncryptionResponse_Track::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommonEncryptionResponse_Track::InternalSwap(CommonEncryptionResponse_Track* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.pssh_.InternalSwap(&other->_impl_.pssh_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_id_, &other->_impl_.key_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.iv_, &other->_impl_.iv_, arena);
        swap(_impl_.crypto_period_index_, other->_impl_.crypto_period_index_);
}

::google::protobuf::Metadata CommonEncryptionResponse_Track::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter, &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
      file_level_metadata_widevine_5fcommon_5fencryption_2eproto[4]);
}
// ===================================================================

class CommonEncryptionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CommonEncryptionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_content_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CommonEncryptionResponse::CommonEncryptionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shaka.CommonEncryptionResponse)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        drm_{visibility, arena, from.drm_},
        tracks_{visibility, arena, from.tracks_},
        content_id_(arena, from.content_id_) {}

CommonEncryptionResponse::CommonEncryptionResponse(
    ::google::protobuf::Arena* arena,
    const CommonEncryptionResponse& from)
    : ::google::protobuf::Message(arena) {
  CommonEncryptionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:shaka.CommonEncryptionResponse)
}
inline PROTOBUF_NDEBUG_INLINE CommonEncryptionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        drm_{visibility, arena},
        tracks_{visibility, arena},
        content_id_(arena) {}

inline void CommonEncryptionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
CommonEncryptionResponse::~CommonEncryptionResponse() {
  // @@protoc_insertion_point(destructor:shaka.CommonEncryptionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommonEncryptionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.content_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommonEncryptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shaka.CommonEncryptionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.drm_.Clear();
  _impl_.tracks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.content_id_.ClearNonDefaultToEmpty();
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommonEncryptionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> CommonEncryptionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967250,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommonEncryptionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .shaka.CommonEncryptionResponse.Track tracks = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_.tracks_)}},
    // optional .shaka.CommonEncryptionResponse.Status status = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 1, 17, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_.status_)}},
    // optional bytes content_id = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_.content_id_)}},
    // repeated .shaka.CommonEncryptionResponse.Drm drm = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_.drm_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .shaka.CommonEncryptionResponse.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .shaka.CommonEncryptionResponse.Drm drm = 3;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_.drm_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .shaka.CommonEncryptionResponse.Track tracks = 4;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_.tracks_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bytes content_id = 6;
    {PROTOBUF_FIELD_OFFSET(CommonEncryptionResponse, _impl_.content_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {0, 18},
    {::_pbi::TcParser::GetTable<::shaka::CommonEncryptionResponse_Drm>()},
    {::_pbi::TcParser::GetTable<::shaka::CommonEncryptionResponse_Track>()},
  }}, {{
  }},
};

::uint8_t* CommonEncryptionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shaka.CommonEncryptionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .shaka.CommonEncryptionResponse.Status status = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  // repeated .shaka.CommonEncryptionResponse.Drm drm = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_drm_size()); i < n; i++) {
    const auto& repfield = this->_internal_drm().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .shaka.CommonEncryptionResponse.Track tracks = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tracks_size()); i < n; i++) {
    const auto& repfield = this->_internal_tracks().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bytes content_id = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_content_id();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shaka.CommonEncryptionResponse)
  return target;
}

::size_t CommonEncryptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shaka.CommonEncryptionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .shaka.CommonEncryptionResponse.Drm drm = 3;
  total_size += 1UL * this->_internal_drm_size();
  for (const auto& msg : this->_internal_drm()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .shaka.CommonEncryptionResponse.Track tracks = 4;
  total_size += 1UL * this->_internal_tracks_size();
  for (const auto& msg : this->_internal_tracks()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes content_id = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_content_id());
    }

    // optional .shaka.CommonEncryptionResponse.Status status = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommonEncryptionResponse::_class_data_ = {
    CommonEncryptionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommonEncryptionResponse::GetClassData() const {
  return &_class_data_;
}

void CommonEncryptionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommonEncryptionResponse*>(&to_msg);
  auto& from = static_cast<const CommonEncryptionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shaka.CommonEncryptionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_drm()->MergeFrom(
      from._internal_drm());
  _this->_internal_mutable_tracks()->MergeFrom(
      from._internal_tracks());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_content_id(from._internal_content_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.status_ = from._impl_.status_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommonEncryptionResponse::CopyFrom(const CommonEncryptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shaka.CommonEncryptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommonEncryptionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommonEncryptionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommonEncryptionResponse::InternalSwap(CommonEncryptionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.drm_.InternalSwap(&other->_impl_.drm_);
  _impl_.tracks_.InternalSwap(&other->_impl_.tracks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_id_, &other->_impl_.content_id_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata CommonEncryptionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter, &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
      file_level_metadata_widevine_5fcommon_5fencryption_2eproto[5]);
}
// ===================================================================

class SignedModularDrmRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SignedModularDrmRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SignedModularDrmRequest, _impl_._has_bits_);
  static void set_has_request(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_signature(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_signer(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SignedModularDrmRequest::SignedModularDrmRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shaka.SignedModularDrmRequest)
}
inline PROTOBUF_NDEBUG_INLINE SignedModularDrmRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        request_(arena, from.request_),
        signature_(arena, from.signature_),
        signer_(arena, from.signer_) {}

SignedModularDrmRequest::SignedModularDrmRequest(
    ::google::protobuf::Arena* arena,
    const SignedModularDrmRequest& from)
    : ::google::protobuf::Message(arena) {
  SignedModularDrmRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:shaka.SignedModularDrmRequest)
}
inline PROTOBUF_NDEBUG_INLINE SignedModularDrmRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        request_(arena),
        signature_(arena),
        signer_(arena) {}

inline void SignedModularDrmRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SignedModularDrmRequest::~SignedModularDrmRequest() {
  // @@protoc_insertion_point(destructor:shaka.SignedModularDrmRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignedModularDrmRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.request_.Destroy();
  _impl_.signature_.Destroy();
  _impl_.signer_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SignedModularDrmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shaka.SignedModularDrmRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.request_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.signature_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.signer_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SignedModularDrmRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2> SignedModularDrmRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SignedModularDrmRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SignedModularDrmRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes request = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SignedModularDrmRequest, _impl_.request_)}},
    // optional bytes signature = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SignedModularDrmRequest, _impl_.signature_)}},
    // optional string signer = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SignedModularDrmRequest, _impl_.signer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes request = 1;
    {PROTOBUF_FIELD_OFFSET(SignedModularDrmRequest, _impl_.request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes signature = 2;
    {PROTOBUF_FIELD_OFFSET(SignedModularDrmRequest, _impl_.signature_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string signer = 3;
    {PROTOBUF_FIELD_OFFSET(SignedModularDrmRequest, _impl_.signer_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\0\0\6\0\0\0\0"
    "shaka.SignedModularDrmRequest"
    "signer"
  }},
};

::uint8_t* SignedModularDrmRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shaka.SignedModularDrmRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes request = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_request();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_signature();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional string signer = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_signer();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "shaka.SignedModularDrmRequest.signer");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shaka.SignedModularDrmRequest)
  return target;
}

::size_t SignedModularDrmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shaka.SignedModularDrmRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes request = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_request());
    }

    // optional bytes signature = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_signature());
    }

    // optional string signer = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_signer());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SignedModularDrmRequest::_class_data_ = {
    SignedModularDrmRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SignedModularDrmRequest::GetClassData() const {
  return &_class_data_;
}

void SignedModularDrmRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SignedModularDrmRequest*>(&to_msg);
  auto& from = static_cast<const SignedModularDrmRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shaka.SignedModularDrmRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_request(from._internal_request());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_signature(from._internal_signature());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_signer(from._internal_signer());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignedModularDrmRequest::CopyFrom(const SignedModularDrmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shaka.SignedModularDrmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SignedModularDrmRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SignedModularDrmRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SignedModularDrmRequest::InternalSwap(SignedModularDrmRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_, &other->_impl_.request_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signer_, &other->_impl_.signer_, arena);
}

::google::protobuf::Metadata SignedModularDrmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter, &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
      file_level_metadata_widevine_5fcommon_5fencryption_2eproto[6]);
}
// ===================================================================

class SignedModularDrmResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SignedModularDrmResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SignedModularDrmResponse, _impl_._has_bits_);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_signature(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SignedModularDrmResponse::SignedModularDrmResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shaka.SignedModularDrmResponse)
}
inline PROTOBUF_NDEBUG_INLINE SignedModularDrmResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        response_(arena, from.response_),
        signature_(arena, from.signature_) {}

SignedModularDrmResponse::SignedModularDrmResponse(
    ::google::protobuf::Arena* arena,
    const SignedModularDrmResponse& from)
    : ::google::protobuf::Message(arena) {
  SignedModularDrmResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:shaka.SignedModularDrmResponse)
}
inline PROTOBUF_NDEBUG_INLINE SignedModularDrmResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        response_(arena),
        signature_(arena) {}

inline void SignedModularDrmResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SignedModularDrmResponse::~SignedModularDrmResponse() {
  // @@protoc_insertion_point(destructor:shaka.SignedModularDrmResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignedModularDrmResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.response_.Destroy();
  _impl_.signature_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SignedModularDrmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shaka.SignedModularDrmResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.response_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.signature_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SignedModularDrmResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SignedModularDrmResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SignedModularDrmResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SignedModularDrmResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes signature = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SignedModularDrmResponse, _impl_.signature_)}},
    // optional bytes response = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SignedModularDrmResponse, _impl_.response_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes response = 1;
    {PROTOBUF_FIELD_OFFSET(SignedModularDrmResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes signature = 2;
    {PROTOBUF_FIELD_OFFSET(SignedModularDrmResponse, _impl_.signature_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SignedModularDrmResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shaka.SignedModularDrmResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes response = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_response();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_signature();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shaka.SignedModularDrmResponse)
  return target;
}

::size_t SignedModularDrmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shaka.SignedModularDrmResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes response = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_response());
    }

    // optional bytes signature = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_signature());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SignedModularDrmResponse::_class_data_ = {
    SignedModularDrmResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SignedModularDrmResponse::GetClassData() const {
  return &_class_data_;
}

void SignedModularDrmResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SignedModularDrmResponse*>(&to_msg);
  auto& from = static_cast<const SignedModularDrmResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shaka.SignedModularDrmResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_response(from._internal_response());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_signature(from._internal_signature());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignedModularDrmResponse::CopyFrom(const SignedModularDrmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shaka.SignedModularDrmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SignedModularDrmResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SignedModularDrmResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SignedModularDrmResponse::InternalSwap(SignedModularDrmResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.response_, &other->_impl_.response_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
}

::google::protobuf::Metadata SignedModularDrmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_widevine_5fcommon_5fencryption_2eproto_getter, &descriptor_table_widevine_5fcommon_5fencryption_2eproto_once,
      file_level_metadata_widevine_5fcommon_5fencryption_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace shaka
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
